import org.jetbrains.kotlin.gradle.tasks.KotlinCompilationTask

plugins {
	id 'kotlin'
	id 'io.spring.antora.generate-antora-yml' version '0.0.1'
	id 'org.antora' version '1.0.0'
}

description = "Spring Framework Docs"

apply from: "${rootDir}/gradle/ide.gradle"
apply from: "${rootDir}/gradle/publications.gradle"

antora {
	options = [clean: true, fetch: !project.gradle.startParameter.offline, stacktrace: true]
	environment = [
			'BUILD_REFNAME': 'HEAD',
			'BUILD_VERSION': project.version,
	]
}

tasks.named("generateAntoraYml") {
	asciidocAttributes = project.provider( {
		return  ["spring-version": project.version ]
	} )
}

tasks.register("generateAntoraResources") {
	dependsOn 'generateAntoraYml'
}

jar {
	enabled = false
}

javadoc {
	enabled = false
}

repositories {
	maven {
		url = "https://repo.spring.io/release"
	}
}

// To avoid a redeclaration error with Kotlin compiler
tasks.named('compileKotlin', KotlinCompilationTask.class) {
    javaSources.from = []
}

dependencies {
	api(project(":spring-aspects"))
	api(project(":spring-context"))
	api(project(":spring-context-support"))
	api(project(":spring-jdbc"))
	api(project(":spring-jms"))
	api(project(":spring-test"))
	api(project(":spring-web"))
	api(project(":spring-webflux"))
	api(project(":spring-webmvc"))
	api(project(":spring-websocket"))

	api("com.fasterxml.jackson.core:jackson-databind")
	api("com.fasterxml.jackson.module:jackson-module-parameter-names")
	api("com.mchange:c3p0:0.9.5.5")
	api("com.oracle.database.jdbc:ojdbc11")
	api("io.projectreactor.netty:reactor-netty-http")
	api("jakarta.jms:jakarta.jms-api")
	api("jakarta.servlet:jakarta.servlet-api")
	api("jakarta.resource:jakarta.resource-api")
	api("jakarta.validation:jakarta.validation-api")
	api("jakarta.websocket:jakarta.websocket-client-api")
	api("javax.cache:cache-api")
	api("org.apache.activemq:activemq-ra:6.1.2")
	api("org.apache.commons:commons-dbcp2:2.11.0")
	api("org.aspectj:aspectjweaver")
	api("org.eclipse.jetty.websocket:jetty-websocket-jetty-api")
	api("org.jetbrains.kotlin:kotlin-stdlib")

	implementation(project(":spring-core-test"))
	implementation("org.assertj:assertj-core")
}
